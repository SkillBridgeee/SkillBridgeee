name: Generate APK (manual)

on:
  # Manual trigger only – will show "Run workflow" button in Actions tab
  workflow_dispatch:
    inputs:
      build_type:
        description: "Which build type to assemble (debug or release)"
        required: true
        default: "debug"
  push: # Add this temporarily for testing
    branches: [ bjlpedersen-chore/add-apk-workflow ]

jobs:
  build:
    name: Build ${{ github.event.inputs.build_type }} APK
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout your code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Java (AGP 8.x → needs JDK 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # 3️⃣ Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platform-tools
            platforms;android-34
            build-tools;34.0.0

      # 4️⃣ Create local.properties (so Gradle can locate SDK)
      - name: Configure local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      # 5️⃣ Make gradlew executable (sometimes loses permission)
      - name: Grant Gradle wrapper permissions
        run: chmod +x ./gradlew

      # 6️⃣ Build APK
      - name: Build ${{ github.event.inputs.build_type }} APK
        run: |
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            ./gradlew :app:assembleRelease --no-daemon --stacktrace
          else
            ./gradlew :app:assembleDebug --no-daemon --stacktrace
          fi

      # 7️⃣ Upload APK artifact so you can download it from GitHub Actions UI
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ github.event.inputs.build_type }}-apk
          path: app/build/outputs/apk/**/${{ github.event.inputs.build_type }}/*.apk
